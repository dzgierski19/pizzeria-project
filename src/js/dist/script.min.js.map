{"version":3,"sources":["script.js"],"names":["select","templateOf","menuProduct","containerOf","menu","cart","all","priceElem","menuProducts","menuProductsActive","widgets","clickable","form","amount","input","linkDecrease","settings","amountWidget","wrapperActive","imageVisible","defaultValue","compile","document","querySelector","innerHTML","Product","id","data","_classCallCheck","this","templates","Handlebars","thisProduct","renderInMenu","getElements","initAccordion","initOrderForm","processOrder","_createClass","key","value","createDOMFromHTML","generatedHTML","appendChild","element","formInputs","querySelectorAll","utils","cartButton","accordionTrigger","addEventListener","event","preventDefault","classList","toggle","classNames","app","activeProduct","thisApp","productData","console","log","products","initData","dataSource","init","initMenu"],"mappings":"mZAIE,IAAMA,OAAS,CACbC,WAAY,CACVC,YAAa,0BANnBC,YAAA,CAA2CC,KAAA,gBAC3CC,KAAA,SAWIC,IAAK,CARDN,aAAS,2BACbC,mBAAY,kCACVC,WAAW,iBAEbC,YAAa,CACXC,UAAM,mBACNC,KAAM,kBANKE,UAAA,+BAQbD,aAAK,mBACHE,aAAc,iBACdC,WAAAA,yBAFGC,QARQ,CAabR,OAAAA,CACES,MAAS,uBACTC,aAAM,kBACNL,aAAW,qBAKbG,WAAS,CACPG,YAAQ,CACNC,cAAO,SACPC,aAAY,WAxBlBC,SAAA,CA8BAC,aAAgB,CACdf,aAAa,EACXgB,WAAAA,EACAC,WAAY,IAKdF,UAAc,CACZG,YAAAA,WADYC,QAAAC,SAAAC,cAAAvB,OAAAC,WAAAC,aAAAsB,YAAAC,QAzClB,WAwCE,SAAAA,EAAAC,EAAAC,GAAAC,gBAAAC,KAAAJ,GAQMK,IAAAA,EAAYD,KAChB3B,EAAa6B,GAAAA,EADfC,EAAAL,KAAAA,EASIK,EAAYC,eALVR,EApDRS,cAAAF,EAAAG,gBAAAH,EAAAI,gBAqDIJ,EAAAK,eArDJ,OAAAC,aAAAb,EAAA,CAAA,CAAAc,IAAA,eAAAC,MAAA,WAwDMR,IAAAA,EAAmBL,KAEnBK,EAAYE,UAAZhC,YAAA8B,EAAAL,MAEAK,EAAYI,QAAAA,MAAZK,kBAAAC,GAGDpB,SAAAC,cAAAvB,OAAAG,YAAAC,MA/DLuC,YAAAX,EAAAY,WAAA,CAAAL,IAAA,cAAAC,MAAA,WAmEM,IAAAR,EAAAH,KACAG,EAAMU,iBAAyBV,EAATY,QAAsBZ,cAA5ChC,OAAAE,YAAAS,WACAqB,EAAApB,KAAAoB,EAAAY,QAAArB,cAAAvB,OAAAE,YAAAU,MAaAoB,EAAYa,WAAab,EAAYpB,KAAKkC,iBAAiB9C,OAAOM,IAAIuC,YAZtEb,EAAAA,WAAsBe,EAAMN,QAAAA,cAAkBC,OAA9CxC,YAAA8C,YACAhB,EAAAzB,UAAAyB,EAAAY,QAAArB,cAAAvB,OAAAE,YAAAK,aAvEN,CAAAgC,IAAA,gBAAAC,MAAA,WAwFM,IAAMR,EAAcH,KAbrBG,EAAAiB,iBAAAC,iBAAA,QAAA,SAAAC,GA3ELA,EAAAC,iBA8EM,IAAMpB,EAANV,SAAAC,cAAAvB,OAAAM,IAAAG,oBAIYoC,MAAZb,GAAyBA,GAAiBc,EAAjBF,SACzBZ,EAAYgB,UAAahB,OAAAA,WAAA9B,YAAoBqB,eAnFnDS,EAAAY,QAAAS,UAAAC,OAAAC,WAAArD,YAAAgB,mBAAA,CAAAqB,IAAA,gBAAAC,MAAA,cAAA,CAAAD,IAAA,eAAAC,MAAA,gBAAAf,EAAA,GAiGQ+B,IAAIC,CACFA,SAAAA,WACD,IAAAC,EAAA7B,KAmBH,IAAI,IAAI8B,KAlBNC,QAAAC,IAAA,gBAAAH,EAAA/B,MAkBqB+B,EAAQ/B,KAAKmC,SAClC,IAAIrC,QAAQkC,EAAaD,EAAQ/B,KAAKmC,SAASH,KAhBlDI,SAAA,WAvGLlC,KAAAF,KAAAqC,YAyGMC,KAAA,WAED,IAAAP,EAAA7B,KA3GL+B,QAAAC,IAAA,wBAAAD,QAAAC,IAAA,WAAAH,GAAAE,QAAAC,IAAA,cAAAN,YA6GMK,QAAM5B,IAAAA,YADMhB,UAGb4C,QAAAC,IAAA,aAAA/B,WA/GL4B,EAAAK,WAsIML,EAAQQ,aAGZV,IAAIS","file":"script.min.js","sourcesContent":["/* global Handlebars, utils, dataSource */ // eslint-disable-line no-unused-vars\r\n{\r\n  'use strict';\r\n \r\n  const select = {\r\n    templateOf: {\r\n      menuProduct: '#template-menu-product',\r\n    },\r\n    containerOf: {\r\n      menu: '#product-list',\r\n      cart: '#cart',\r\n    },\r\n    all: {\r\n      menuProducts: '#product-list > .product',\r\n      menuProductsActive: '#product-list > .product.active',\r\n      formInputs: 'input, select',\r\n    },\r\n    menuProduct: {\r\n      clickable: '.product__header',\r\n      form: '.product__order',\r\n      priceElem: '.product__total-price .price',\r\n      imageWrapper: '.product__images',\r\n      amountWidget: '.widget-amount',\r\n      cartButton: '[href=\"#add-to-cart\"]',\r\n    },\r\n    widgets: {\r\n      amount: {\r\n        input: 'input[name=\"amount\"]',\r\n        linkDecrease: 'a[href=\"#less\"]',\r\n        linkIncrease: 'a[href=\"#more\"]',\r\n      },\r\n    },\r\n  };\r\n  \r\n  const classNames = {\r\n    menuProduct: {\r\n      wrapperActive: 'active',\r\n      imageVisible: 'active',\r\n    },\r\n  };\r\n  \r\n  const settings = {\r\n    amountWidget: {\r\n      defaultValue: 1,\r\n      defaultMin: 1,\r\n      defaultMax: 9,\r\n    }\r\n  };\r\n \r\n  const templates = {\r\n    menuProduct: Handlebars.compile(document.querySelector(select.templateOf.menuProduct).innerHTML),\r\n  };\r\n  \r\n  class Product{\r\n    constructor(id, data){\r\n      const thisProduct = this;\r\n      thisProduct.id = id;\r\n      thisProduct.data = data;\r\n      thisProduct.renderInMenu();\r\n      thisProduct.getElements();\r\n      thisProduct.initAccordion();\r\n      thisProduct.initOrderForm();\r\n      thisProduct.processOrder();\r\n      //console.log('new Product:', thisProduct);\r\n    }\r\n    \r\n    renderInMenu(){\r\n      const thisProduct = this;\r\n      /* Generate HTML based on template */\r\n      const generatedHTML = templates.menuProduct(thisProduct.data);\r\n      /* create element using utils.createElementFromHTML */\r\n      thisProduct.element = utils.createDOMFromHTML(generatedHTML);\r\n      /* find menu container */\r\n      const menuContainer = document.querySelector(select.containerOf.menu);\r\n      /* add element to menu */\r\n      menuContainer.appendChild(thisProduct.element);\r\n    }\r\n    \r\n    getElements(){\r\n      const thisProduct = this;\r\n\r\n      thisProduct.accordionTrigger = thisProduct.element.querySelector(select.menuProduct.clickable);\r\n      thisProduct.form = thisProduct.element.querySelector(select.menuProduct.form);\r\n      thisProduct.formInputs = thisProduct.form.querySelectorAll(select.all.formInputs);\r\n      thisProduct.cartButton = thisProduct.element.querySelector(select.menuProduct.cartButton);\r\n      thisProduct.priceElem = thisProduct.element.querySelector(select.menuProduct.priceElem);\r\n    }\r\n\r\n    initAccordion(){\r\n      const thisProduct = this;\r\n\r\n      thisProduct.accordionTrigger.addEventListener('click', function(event) {\r\n        /* prevent default action for event */\r\n        event.preventDefault();\r\n        /* find active product (product that has active class) */\r\n        const activeProduct = document.querySelector(select.all.menuProductsActive);\r\n        // console.log(activeProduct);\r\n                /* if there is active product and it's not thisProduct.element, remove class active from it */\r\n        if (activeProduct != null && activeProduct != thisProduct.element) {\r\n          activeProduct.classList.remove(classNames.menuProduct.wrapperActive);\r\n        }\r\n        /* toggle active class on thisProduct.element */\r\n        thisProduct.element.classList.toggle(classNames.menuProduct.wrapperActive);\r\n      });\r\n    }\r\n    initOrderForm(){\r\n      const thisProduct = this;\r\n      // console.log('This is info that initOrderForm method was executed');\r\n    }\r\n    processOrder(){\r\n      const thisProduct = this;\r\n      // console.log('This is info that processOrder method was executed');\r\n    }\r\n  }\r\n\r\n  const app = {\r\n    initMenu: function() {\r\n      const thisApp = this;\r\n      console.log('thisApp.data:', thisApp.data);\r\n      for(let productData in thisApp.data.products){\r\n        new Product(productData, thisApp.data.products[productData]);\r\n      }\r\n    },\r\n    initData: function(){\r\n      const thisApp = this;\r\n      thisApp.data = dataSource;\r\n    },\r\n    init: function(){\r\n      const thisApp = this;\r\n      console.log('*** App starting ***');\r\n      console.log('thisApp:', thisApp);\r\n      console.log('classNames:', classNames);\r\n      console.log('settings:', settings);\r\n      console.log('templates:', templates);\r\n      thisApp.initData();\r\n      thisApp.initMenu();\r\n    },\r\n  };\r\n  app.init();\r\n}"]}