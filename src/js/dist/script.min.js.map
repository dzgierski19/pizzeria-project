{"version":3,"sources":["script.js"],"names":["select","templateOf","menuProduct","containerOf","menu","cart","all","menuProducts","imageWrapper","formInputs","amount","clickable","form","classNames","widgets","input","settings","amountWidget","wrapperActive","Handlebars","compile","document","querySelector","innerHTML","defaultMax","Product","id","data","_classCallCheck","this","thisProduct","templates","renderInMenu","getElements","initAccordion","console","log","_createClass","key","value","createDOMFromHTML","generatedHTML","appendChild","element","accordionTrigger","cartButton","priceElem","menuContainer","event","preventDefault","activeProduct","menuProductsActive","querySelectorAll","classList","toggle","app","initMenu","thisApp","products","productData","initData","dataSource","init"],"mappings":"mZAGE,IAAMA,OAAS,CACbC,WAAY,CACVC,YAAa,0BAEfC,YAAa,CAPjBC,KAAA,gBAA2CC,KAAA,SAEzCC,IAAA,CAUIC,aAAc,2BATZP,mBAAS,kCACbC,WAAY,iBAAAC,YADC,CAIbC,UAAa,mBACXC,KAAM,kBACNC,UAAM,+BANKG,aAAA,mBAQbF,aAAK,iBACHC,WAAY,yBAEZE,QAAAA,CAXWC,OAAA,CAabR,MAAW,uBACTS,aAAW,kBACXC,aAAM,qBAfKC,WAAA,CAqBbC,YAAS,CACPJ,cAAQ,SACNK,aAAO,WAFFC,SAAA,CArBXC,aAAA,CA8BMJ,aAAa,EACjBX,WAAa,EACXgB,WAAAA,IAKEF,UAAW,CACfC,YAAYE,WAAEC,QAAAC,SAAAC,cAAAtB,OAAAC,WAAAC,aAAAqB,YAGZC,QA3CN,WAwCkB,SAAAC,EAAAC,EAAAC,GAAAC,gBAAAC,KAAAJ,GADhB,IAAAK,EAAAD,KAQME,EAAYL,GAAAA,EAChBxB,EAAaiB,KAAAA,EADfW,EAAAE,eAUIF,EAAYG,cANVR,EAnDRS,gBAAAC,QAAAC,IAAA,eAAAN,GAAA,OAAAO,aAAAZ,EAAA,CAAA,CAAAa,IAAA,eAAAC,MAAA,WA+DM,IAAMT,EAAcD,KATpBC,EAAAC,UAAA7B,YAAA4B,EAAAH,MAEAG,EAAYE,QAAAA,MAAZQ,kBAAAC,GAEYP,SAAZZ,cAAAtB,OAAAG,YAAAC,MAEDsC,YAAAZ,EAAAa,WA5DL,CAAAL,IAAA,cAAAC,MAAA,WAAA,IAAAT,EAAAD,KAgEMC,EAAAc,iBAAAd,EAAAa,QAAArB,cAAAtB,OAAAE,YAAAS,WAcAmB,EAAYlB,KAAOkB,EAAYa,QAAQrB,cAActB,OAAOE,YAAYU,MAbxEkB,EAAMW,WAAgBV,EAAU7B,KAAAA,iBAAwByB,OAAxDrB,IAAAG,YACAqB,EAAAe,WAAAf,EAAAa,QAAArB,cAAAtB,OAAAE,YAAA2C,YAeAf,EAAYgB,UAAYhB,EAAYa,QAAQrB,cAActB,OAAOE,YAAY4C,aAjFnF,CAAAR,IAAA,gBAAAC,MAAA,WAoFM,IAAMT,EAAcD,KAbpBkB,EAAAA,iBAA0BjB,iBAAYa,QAAtC,SAAAK,GAvENA,EAAAC,iBAAA,IAAAC,EAAA7B,SA0EiBC,cAAAtB,OAAAM,IAAA6C,oBAIQrB,MAAnBA,GAAmBA,GAAoBR,EAActB,SACrD8B,EAAYrB,UAAaqB,OAAAA,WAAiBsB,YAAAA,eAG3CtB,EAAAa,QAAAU,UAAAC,OAAAzC,WAAAX,YAAAgB,qBAlFLO,EAAA,GAsFM8B,IAAA,CAmBFC,SAAU,WAjBR1B,IAAAA,EAAYc,KAEVI,IAAAA,IAAAA,KADAb,QAAAC,IAAA,gBAAAqB,EAAA9B,MACMsB,EAANtB,KAAA+B,SACA,IAAAjC,QAAAkC,EAAAF,EAAA9B,KAAA+B,SAAAC,KAqBJC,SAAU,WAlBN/B,KAoBMF,KAAOkC,YAlBXX,KAAAA,WACD,IAAAO,EAAA5B,KACDM,QAAAC,IAAA,wBAqBFD,QAAQC,IAAI,WAAYqB,GACxBtB,QAAQC,IAAI,cAAevB,YArBzBiB,QAAAA,IAAAA,YAAoBuB,UACrBlB,QAZDC,IAAA,aAAAL,WAaD0B,EAAAG,WArGLH,EAAAD,aAAAD,IAAAO","file":"script.min.js","sourcesContent":["/* global Handlebars, utils, dataSource */ // eslint-disable-line no-unused-vars\n{\n  'use strict';\n  const select = {\n    templateOf: {\n      menuProduct: '#template-menu-product',\n    },\n    containerOf: {\n      menu: '#product-list',\n      cart: '#cart',\n    },\n    all: {\n      menuProducts: '#product-list > .product',\n      menuProductsActive: '#product-list > .product.active',\n      formInputs: 'input, select',\n    },\n    menuProduct: {\n      clickable: '.product__header',\n      form: '.product__order',\n      priceElem: '.product__total-price .price',\n      imageWrapper: '.product__images',\n      amountWidget: '.widget-amount',\n      cartButton: '[href=\"#add-to-cart\"]',\n    },\n    widgets: {\n      amount: {\n        input: 'input[name=\"amount\"]',\n        linkDecrease: 'a[href=\"#less\"]',\n        linkIncrease: 'a[href=\"#more\"]',\n      },\n    },\n  };\n\n  const classNames = {\n    menuProduct: {\n      wrapperActive: 'active',\n      imageVisible: 'active',\n    },\n  };\n\n  const settings = {\n    amountWidget: {\n      defaultValue: 1,\n      defaultMin: 1,\n      defaultMax: 9,\n    }\n  };\n\n  const templates = {\n    menuProduct: Handlebars.compile(document.querySelector(select.templateOf.menuProduct).innerHTML),\n  };\n\n  class Product{\n    constructor(id, data){\n      const thisProduct = this;\n      thisProduct.id = id;\n      thisProduct.data = data;\n      thisProduct.renderInMenu();\n      thisProduct.getElements();\n      thisProduct.initAccordion();\n      console.log('new Product:', thisProduct);\n    }\n\n    renderInMenu(){\n      const thisProduct = this;\n      /* Generate HTML based on template */\n      const generatedHTML = templates.menuProduct(thisProduct.data);\n      /* create element using utils.createElementFromHTML */\n      thisProduct.element = utils.createDOMFromHTML(generatedHTML);\n      /* find menu container */\n      const menuContainer = document.querySelector(select.containerOf.menu);\n      /* add element to menu */\n      menuContainer.appendChild(thisProduct.element);\n    }\n\n    getElements(){\n      const thisProduct = this;\n\n      thisProduct.accordionTrigger = thisProduct.element.querySelector(select.menuProduct.clickable);\n      thisProduct.form = thisProduct.element.querySelector(select.menuProduct.form);\n      thisProduct.formInputs = thisProduct.form.querySelectorAll(select.all.formInputs);\n      thisProduct.cartButton = thisProduct.element.querySelector(select.menuProduct.cartButton);\n      thisProduct.priceElem = thisProduct.element.querySelector(select.menuProduct.priceElem);\n    }\n    initAccordion(){\n      const thisProduct = this;\n\n      /* START: add event listener to clickable trigger on event click */\n\n      thisProduct.accordionTrigger.addEventListener('click', function(event) {\n        /* prevent default action for event */\n        event.preventDefault();\n        /* find active product (product that has active class) */\n        const activeProduct = document.querySelector(select.all.menuProductsActive);\n        // console.log(activeProduct);\n        /* if there is active product and it's not thisProduct.element, remove class active from it */\n        if (activeProduct != null && activeProduct != thisProduct.element) {\n          activeProduct.classList.remove(classNames.menuProduct.wrapperActive);\n        }\n        /* toggle active class on thisProduct.element */\n        thisProduct.element.classList.toggle(classNames.menuProduct.wrapperActive);\n      });\n    }\n  }\n  \n  const app = {\n    initMenu: function() {\n      const thisApp = this;\n      console.log('thisApp.data:', thisApp.data);\n      for(let productData in thisApp.data.products){\n        new Product(productData, thisApp.data.products[productData]);\n      }\n    },\n    initData: function(){\n      const thisApp = this;\n      thisApp.data = dataSource;\n    },\n    init: function(){\n      const thisApp = this;\n      console.log('*** App starting ***');\n      console.log('thisApp:', thisApp);\n      console.log('classNames:', classNames);\n      console.log('settings:', settings);\n      console.log('templates:', templates);\n      thisApp.initData();\n      thisApp.initMenu();\n    },\n  };\n  app.init();\n}"]}